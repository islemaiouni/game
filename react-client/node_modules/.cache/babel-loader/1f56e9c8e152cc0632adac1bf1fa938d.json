{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\nvar Polling = require(\"./polling\");\nvar globalThis = require(\"../globalThis\");\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\nvar JSONPPolling = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(JSONPPolling, _Polling);\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  function JSONPPolling(opts) {\n    var _this;\n    _classCallCheck(this, JSONPPolling);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JSONPPolling).call(this, opts));\n    _this.query = _this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    _this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(_this.onData.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    // append to query string\n    _this.query.j = _this.index;\n    return _this;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  _createClass(JSONPPolling, [{\n    key: \"doClose\",\n    /**\n     * Closes the socket.\n     *\n     * @api private\n     */\n    value: function doClose() {\n      if (this.script) {\n        // prevent spurious errors from being emitted when the window is unloaded\n        this.script.onerror = function () {};\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n      if (this.form) {\n        this.form.parentNode.removeChild(this.form);\n        this.form = null;\n        this.iframe = null;\n      }\n      _get(_getPrototypeOf(JSONPPolling.prototype), \"doClose\", this).call(this);\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this2 = this;\n      var script = document.createElement(\"script\");\n      if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n      script.async = true;\n      script.src = this.uri();\n      script.onerror = function (e) {\n        _this2.onError(\"jsonp poll error\", e);\n      };\n      var insertAt = document.getElementsByTagName(\"script\")[0];\n      if (insertAt) {\n        insertAt.parentNode.insertBefore(script, insertAt);\n      } else {\n        (document.head || document.body).appendChild(script);\n      }\n      this.script = script;\n      var isUAgecko = \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n      if (isUAgecko) {\n        setTimeout(function () {\n          var iframe = document.createElement(\"iframe\");\n          document.body.appendChild(iframe);\n          document.body.removeChild(iframe);\n        }, 100);\n      }\n    }\n    /**\n     * Writes with a hidden iframe.\n     *\n     * @param {String} data to send\n     * @param {Function} called upon flush.\n     * @api private\n     */\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this3 = this;\n      var iframe;\n      if (!this.form) {\n        var form = document.createElement(\"form\");\n        var area = document.createElement(\"textarea\");\n        var id = this.iframeId = \"eio_iframe_\" + this.index;\n        form.className = \"socketio\";\n        form.style.position = \"absolute\";\n        form.style.top = \"-1000px\";\n        form.style.left = \"-1000px\";\n        form.target = id;\n        form.method = \"POST\";\n        form.setAttribute(\"accept-charset\", \"utf-8\");\n        area.name = \"d\";\n        form.appendChild(area);\n        document.body.appendChild(form);\n        this.form = form;\n        this.area = area;\n      }\n      this.form.action = this.uri();\n      function complete() {\n        initIframe();\n        fn();\n      }\n      var initIframe = function initIframe() {\n        if (_this3.iframe) {\n          try {\n            _this3.form.removeChild(_this3.iframe);\n          } catch (e) {\n            _this3.onError(\"jsonp polling iframe removal error\", e);\n          }\n        }\n        try {\n          // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n          var html = '<iframe src=\"javascript:0\" name=\"' + _this3.iframeId + '\">';\n          iframe = document.createElement(html);\n        } catch (e) {\n          iframe = document.createElement(\"iframe\");\n          iframe.name = _this3.iframeId;\n          iframe.src = \"javascript:0\";\n        }\n        iframe.id = _this3.iframeId;\n        _this3.form.appendChild(iframe);\n        _this3.iframe = iframe;\n      };\n      initIframe();\n\n      // escape \\n to prevent it from being converted into \\r\\n by some UAs\n      // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n      data = data.replace(rEscapedNewline, \"\\\\\\n\");\n      this.area.value = data.replace(rNewline, \"\\\\n\");\n      try {\n        this.form.submit();\n      } catch (e) {}\n      if (this.iframe.attachEvent) {\n        this.iframe.onreadystatechange = function () {\n          if (_this3.iframe.readyState === \"complete\") {\n            complete();\n          }\n        };\n      } else {\n        this.iframe.onload = complete;\n      }\n    }\n  }, {\n    key: \"supportsBinary\",\n    get: function get() {\n      return false;\n    }\n  }]);\n  return JSONPPolling;\n}(Polling);\nmodule.exports = JSONPPolling;","map":null,"metadata":{},"sourceType":"script"}