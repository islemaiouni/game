{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar GameService = /*#__PURE__*/function () {\n  function GameService() {\n    _classCallCheck(this, GameService);\n  }\n  _createClass(GameService, [{\n    key: \"joinGameRoom\",\n    value: function () {\n      var _joinGameRoom = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(socket, roomId) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (rs, rj) {\n                  socket.emit(\"join_game\", {\n                    roomId: roomId\n                  });\n                  socket.on(\"room_joined\", function () {\n                    return rs(true);\n                  });\n                  socket.on(\"room_join_error\", function (_ref) {\n                    var error = _ref.error;\n                    return rj(error);\n                  });\n                }));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function joinGameRoom(_x, _x2) {\n        return _joinGameRoom.apply(this, arguments);\n      }\n      return joinGameRoom;\n    }()\n  }, {\n    key: \"updateGame\",\n    value: function () {\n      var _updateGame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(socket, gameMatrix) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                socket.emit(\"update_game\", {\n                  matrix: gameMatrix\n                });\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      function updateGame(_x3, _x4) {\n        return _updateGame.apply(this, arguments);\n      }\n      return updateGame;\n    }()\n  }, {\n    key: \"onGameUpdate\",\n    value: function () {\n      var _onGameUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(socket, listiner) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                socket.on(\"on_game_update\", function (_ref2) {\n                  var matrix = _ref2.matrix;\n                  return listiner(matrix);\n                });\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      function onGameUpdate(_x5, _x6) {\n        return _onGameUpdate.apply(this, arguments);\n      }\n      return onGameUpdate;\n    }()\n  }, {\n    key: \"onStartGame\",\n    value: function () {\n      var _onStartGame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(socket, listiner) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                socket.on(\"start_game\", listiner);\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      function onStartGame(_x7, _x8) {\n        return _onStartGame.apply(this, arguments);\n      }\n      return onStartGame;\n    }()\n  }, {\n    key: \"gameWin\",\n    value: function () {\n      var _gameWin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(socket, message) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                socket.emit(\"game_win\", {\n                  message: message\n                });\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n      function gameWin(_x9, _x10) {\n        return _gameWin.apply(this, arguments);\n      }\n      return gameWin;\n    }()\n  }, {\n    key: \"onGameWin\",\n    value: function () {\n      var _onGameWin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(socket, listiner) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                socket.on(\"on_game_win\", function (_ref3) {\n                  var message = _ref3.message;\n                  return listiner(message);\n                });\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n      function onGameWin(_x11, _x12) {\n        return _onGameWin.apply(this, arguments);\n      }\n      return onGameWin;\n    }()\n  }]);\n  return GameService;\n}();\nexport default new GameService();","map":{"version":3,"names":["GameService","socket","roomId","Promise","rs","rj","emit","on","error","gameMatrix","matrix","listiner","message"],"sources":["C:/Users/pc/react-socketio-tic-tac-toe/react-client/src/services/gameService/index.ts"],"sourcesContent":["import { Socket } from \"socket.io-client\";\nimport { IPlayMatrix, IStartGame } from \"../../components/game\";\n\nclass GameService {\n  public async joinGameRoom(socket: Socket, roomId: string): Promise<boolean> {\n    return new Promise((rs, rj) => {\n      socket.emit(\"join_game\", { roomId });\n      socket.on(\"room_joined\", () => rs(true));\n      socket.on(\"room_join_error\", ({ error }) => rj(error));\n    });\n  }\n\n  public async updateGame(socket: Socket, gameMatrix: IPlayMatrix) {\n    socket.emit(\"update_game\", { matrix: gameMatrix });\n  }\n\n  public async onGameUpdate(\n    socket: Socket,\n    listiner: (matrix: IPlayMatrix) => void\n  ) {\n    socket.on(\"on_game_update\", ({ matrix }) => listiner(matrix));\n  }\n\n  public async onStartGame(\n    socket: Socket,\n    listiner: (options: IStartGame) => void\n  ) {\n    socket.on(\"start_game\", listiner);\n  }\n\n  public async gameWin(socket: Socket, message: string) {\n    socket.emit(\"game_win\", { message });\n  }\n\n  public async onGameWin(socket: Socket, listiner: (message: string) => void) {\n    socket.on(\"on_game_win\", ({ message }) => listiner(message));\n  }\n}\n\nexport default new GameService();\n"],"mappings":";;;+CACA;AAAA,IAEMA,WAAW;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA,gGACWC,MAAc,EAAEC,MAAc;QAAA;UAAA;YAAA;cAAA;gBAAA,iCAC/C,IAAIC,OAAO,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAK;kBAC7BJ,MAAM,CAACK,IAAI,CAAC,WAAW,EAAE;oBAAEJ,MAAM,EAANA;kBAAO,CAAC,CAAC;kBACpCD,MAAM,CAACM,EAAE,CAAC,aAAa,EAAE;oBAAA,OAAMH,EAAE,CAAC,IAAI,CAAC;kBAAA,EAAC;kBACxCH,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAE;oBAAA,IAAGC,KAAK,QAALA,KAAK;oBAAA,OAAOH,EAAE,CAACG,KAAK,CAAC;kBAAA,EAAC;gBACxD,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,+FAGoBP,MAAc,EAAEQ,UAAuB;QAAA;UAAA;YAAA;cAAA;gBAC7DR,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;kBAAEI,MAAM,EAAED;gBAAW,CAAC,CAAC;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,iGAInDR,MAAc,EACdU,QAAuC;QAAA;UAAA;YAAA;cAAA;gBAEvCV,MAAM,CAACM,EAAE,CAAC,gBAAgB,EAAE;kBAAA,IAAGG,MAAM,SAANA,MAAM;kBAAA,OAAOC,QAAQ,CAACD,MAAM,CAAC;gBAAA,EAAC;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,gGAI9DT,MAAc,EACdU,QAAuC;QAAA;UAAA;YAAA;cAAA;gBAEvCV,MAAM,CAACM,EAAE,CAAC,YAAY,EAAEI,QAAQ,CAAC;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,4FAGfV,MAAc,EAAEW,OAAe;QAAA;UAAA;YAAA;cAAA;gBAClDX,MAAM,CAACK,IAAI,CAAC,UAAU,EAAE;kBAAEM,OAAO,EAAPA;gBAAQ,CAAC,CAAC;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,8FAGhBX,MAAc,EAAEU,QAAmC;QAAA;UAAA;YAAA;cAAA;gBACxEV,MAAM,CAACM,EAAE,CAAC,aAAa,EAAE;kBAAA,IAAGK,OAAO,SAAPA,OAAO;kBAAA,OAAOD,QAAQ,CAACC,OAAO,CAAC;gBAAA,EAAC;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAIjE,eAAe,IAAIZ,WAAW,EAAE"},"metadata":{},"sourceType":"module"}