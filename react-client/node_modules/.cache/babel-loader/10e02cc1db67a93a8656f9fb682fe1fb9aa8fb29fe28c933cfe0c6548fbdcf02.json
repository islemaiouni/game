{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\react-socketio-tic-tac-toe\\\\react-client\\\\src\\\\components\\\\game\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport gameContext from \"../../gameContext\";\nimport gameService from \"../../services/gameService\";\nimport socketService from \"../../services/socketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: \"Zen Tokyo Zoo\", cursive;\n  position: relative;\n`;\n_c = GameContainer;\nconst RowContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n_c2 = RowContainer;\nconst Cell = styled.div`\n  width: 13em;\n  height: 9em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  cursor: pointer;\n  border-top: ${_ref => {\n  let {\n    borderTop\n  } = _ref;\n  return borderTop && \"3px solid #8e44ad\";\n}};\n  border-left: ${_ref2 => {\n  let {\n    borderLeft\n  } = _ref2;\n  return borderLeft && \"3px solid #8e44ad\";\n}};\n  border-bottom: ${_ref3 => {\n  let {\n    borderBottom\n  } = _ref3;\n  return borderBottom && \"3px solid #8e44ad\";\n}};\n  border-right: ${_ref4 => {\n  let {\n    borderRight\n  } = _ref4;\n  return borderRight && \"3px solid #8e44ad\";\n}};\n  transition: all 270ms ease-in-out;\n\n  &:hover {\n    background-color: #8d44ad28;\n  }\n`;\n_c3 = Cell;\nconst PlayStopper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n  cursor: default;\n`;\n_c4 = PlayStopper;\nconst X = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"X\";\n  }\n`;\n_c5 = X;\nconst O = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"O\";\n  }\n`;\n_c6 = O;\nexport function Game() {\n  _s();\n  const [matrix, setMatrix] = useState([[null, null, null], [null, null, null], [null, null, null]]);\n  const {\n    playerSymbol,\n    setPlayerSymbol,\n    setPlayerTurn,\n    isPlayerTurn,\n    setGameStarted,\n    isGameStarted\n  } = useContext(gameContext);\n  const checkGameState = matrix => {\n    for (let i = 0; i < matrix.length; i++) {\n      let row = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        row.push(matrix[i][j]);\n      }\n      if (row.every(value => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (row.every(value => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n    for (let i = 0; i < matrix.length; i++) {\n      let column = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        column.push(matrix[j][i]);\n      }\n      if (column.every(value => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (column.every(value => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n    if (matrix[1][1]) {\n      if (matrix[0][0] === matrix[1][1] && matrix[2][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];else return [false, true];\n      }\n      if (matrix[2][0] === matrix[1][1] && matrix[0][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];else return [false, true];\n      }\n    }\n\n    //Check for a tie\n    if (matrix.every(m => m.every(v => v !== null))) {\n      return [true, true];\n    }\n    return [false, false];\n  };\n  const updateGameMatrix = (column, row, symbol) => {\n    const newMatrix = [...matrix];\n    if (newMatrix[row][column] === null || newMatrix[row][column] === \"null\") {\n      newMatrix[row][column] = symbol;\n      setMatrix(newMatrix);\n    }\n    if (socketService.socket) {\n      gameService.updateGame(socketService.socket, newMatrix);\n      const [currentPlayerWon, otherPlayerWon] = checkGameState(newMatrix);\n      if (currentPlayerWon && otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"The Game is a TIE!\");\n        alert(\"The Game is a TIE!\");\n      } else if (currentPlayerWon && !otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"You Lost!\");\n        alert(\"You Won!\");\n      }\n      setPlayerTurn(false);\n    }\n  };\n  const handleGameUpdate = () => {\n    if (socketService.socket) gameService.onGameUpdate(socketService.socket, newMatrix => {\n      setMatrix(newMatrix);\n      checkGameState(newMatrix);\n      setPlayerTurn(true);\n    });\n  };\n  const handleGameStart = () => {\n    if (socketService.socket) gameService.onStartGame(socketService.socket, options => {\n      setGameStarted(true);\n      setPlayerSymbol(options.symbol);\n      if (options.start) setPlayerTurn(true);else setPlayerTurn(false);\n    });\n  };\n  const handleGameWin = () => {\n    if (socketService.socket) gameService.onGameWin(socketService.socket, message => {\n      console.log(\"Here\", message);\n      setPlayerTurn(false);\n      alert(message);\n    });\n  };\n  useEffect(() => {\n    handleGameUpdate();\n    handleGameStart();\n    handleGameWin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [!isGameStarted && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting for Other Player to Join to Start the Game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), (!isGameStarted || !isPlayerTurn) && /*#__PURE__*/_jsxDEV(PlayStopper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 45\n    }, this), matrix.map((row, rowIdx) => {\n      return /*#__PURE__*/_jsxDEV(RowContainer, {\n        children: row.map((column, columnIdx) => /*#__PURE__*/_jsxDEV(Cell, {\n          borderRight: columnIdx < 2,\n          borderLeft: columnIdx > 0,\n          borderBottom: rowIdx < 2,\n          borderTop: rowIdx > 0,\n          onClick: () => updateGameMatrix(columnIdx, rowIdx, playerSymbol),\n          children: column && column !== \"null\" ? column === \"x\" ? /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(O, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"wc/ErjDTsnoWfhlQH329RQk50ZA=\");\n_c7 = Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"RowContainer\");\n$RefreshReg$(_c3, \"Cell\");\n$RefreshReg$(_c4, \"PlayStopper\");\n$RefreshReg$(_c5, \"X\");\n$RefreshReg$(_c6, \"O\");\n$RefreshReg$(_c7, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","styled","gameContext","gameService","socketService","GameContainer","div","RowContainer","Cell","borderTop","borderLeft","borderBottom","borderRight","PlayStopper","X","span","O","Game","matrix","setMatrix","playerSymbol","setPlayerSymbol","setPlayerTurn","isPlayerTurn","setGameStarted","isGameStarted","checkGameState","i","length","row","j","push","every","value","column","m","v","updateGameMatrix","symbol","newMatrix","socket","updateGame","currentPlayerWon","otherPlayerWon","gameWin","alert","handleGameUpdate","onGameUpdate","handleGameStart","onStartGame","options","start","handleGameWin","onGameWin","message","console","log","map","rowIdx","columnIdx"],"sources":["C:/Users/pc/react-socketio-tic-tac-toe/react-client/src/components/game/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport gameContext from \"../../gameContext\";\nimport gameService from \"../../services/gameService\";\nimport socketService from \"../../services/socketService\";\n\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: \"Zen Tokyo Zoo\", cursive;\n  position: relative;\n`;\n\nconst RowContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\ninterface ICellProps {\n  borderTop?: boolean;\n  borderRight?: boolean;\n  borderLeft?: boolean;\n  borderBottom?: boolean;\n}\n\nconst Cell = styled.div<ICellProps>`\n  width: 13em;\n  height: 9em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  cursor: pointer;\n  border-top: ${({ borderTop }) => borderTop && \"3px solid #8e44ad\"};\n  border-left: ${({ borderLeft }) => borderLeft && \"3px solid #8e44ad\"};\n  border-bottom: ${({ borderBottom }) => borderBottom && \"3px solid #8e44ad\"};\n  border-right: ${({ borderRight }) => borderRight && \"3px solid #8e44ad\"};\n  transition: all 270ms ease-in-out;\n\n  &:hover {\n    background-color: #8d44ad28;\n  }\n`;\n\nconst PlayStopper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n  cursor: default;\n`;\n\nconst X = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"X\";\n  }\n`;\n\nconst O = styled.span`\n  font-size: 100px;\n  color: #8e44ad;\n  &::after {\n    content: \"O\";\n  }\n`;\n\nexport type IPlayMatrix = Array<Array<string | null>>;\nexport interface IStartGame {\n  start: boolean;\n  symbol: \"x\" | \"o\";\n}\n\nexport function Game() {\n  const [matrix, setMatrix] = useState<IPlayMatrix>([\n    [null, null, null],\n    [null, null, null],\n    [null, null, null],\n  ]);\n\n  const {\n    playerSymbol,\n    setPlayerSymbol,\n    setPlayerTurn,\n    isPlayerTurn,\n    setGameStarted,\n    isGameStarted,\n  } = useContext(gameContext);\n\n  const checkGameState = (matrix: IPlayMatrix) => {\n    for (let i = 0; i < matrix.length; i++) {\n      let row = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        row.push(matrix[i][j]);\n      }\n\n      if (row.every((value) => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (row.every((value) => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n\n    for (let i = 0; i < matrix.length; i++) {\n      let column = [];\n      for (let j = 0; j < matrix[i].length; j++) {\n        column.push(matrix[j][i]);\n      }\n\n      if (column.every((value) => value && value === playerSymbol)) {\n        return [true, false];\n      } else if (column.every((value) => value && value !== playerSymbol)) {\n        return [false, true];\n      }\n    }\n\n    if (matrix[1][1]) {\n      if (matrix[0][0] === matrix[1][1] && matrix[2][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];\n        else return [false, true];\n      }\n\n      if (matrix[2][0] === matrix[1][1] && matrix[0][2] === matrix[1][1]) {\n        if (matrix[1][1] === playerSymbol) return [true, false];\n        else return [false, true];\n      }\n    }\n\n    //Check for a tie\n    if (matrix.every((m) => m.every((v) => v !== null))) {\n      return [true, true];\n    }\n\n    return [false, false];\n  };\n\n  const updateGameMatrix = (column: number, row: number, symbol: \"x\" | \"o\") => {\n    const newMatrix = [...matrix];\n\n    if (newMatrix[row][column] === null || newMatrix[row][column] === \"null\") {\n      newMatrix[row][column] = symbol;\n      setMatrix(newMatrix);\n    }\n\n    if (socketService.socket) {\n      gameService.updateGame(socketService.socket, newMatrix);\n      const [currentPlayerWon, otherPlayerWon] = checkGameState(newMatrix);\n      if (currentPlayerWon && otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"The Game is a TIE!\");\n        alert(\"The Game is a TIE!\");\n      } else if (currentPlayerWon && !otherPlayerWon) {\n        gameService.gameWin(socketService.socket, \"You Lost!\");\n        alert(\"You Won!\");\n      }\n\n      setPlayerTurn(false);\n    }\n  };\n\n  const handleGameUpdate = () => {\n    if (socketService.socket)\n      gameService.onGameUpdate(socketService.socket, (newMatrix) => {\n        setMatrix(newMatrix);\n        checkGameState(newMatrix);\n        setPlayerTurn(true);\n      });\n  };\n\n  const handleGameStart = () => {\n    if (socketService.socket)\n      gameService.onStartGame(socketService.socket, (options) => {\n        setGameStarted(true);\n        setPlayerSymbol(options.symbol);\n        if (options.start) setPlayerTurn(true);\n        else setPlayerTurn(false);\n      });\n  };\n\n  const handleGameWin = () => {\n    if (socketService.socket)\n      gameService.onGameWin(socketService.socket, (message) => {\n        console.log(\"Here\", message);\n        setPlayerTurn(false);\n        alert(message);\n      });\n  };\n\n  useEffect(() => {\n    handleGameUpdate();\n    handleGameStart();\n    handleGameWin();\n  }, []);\n\n  return (\n    <GameContainer>\n      {!isGameStarted && (\n        <h2>Waiting for Other Player to Join to Start the Game!</h2>\n      )}\n      {(!isGameStarted || !isPlayerTurn) && <PlayStopper />}\n      {matrix.map((row, rowIdx) => {\n        return (\n          <RowContainer>\n            {row.map((column, columnIdx) => (\n              <Cell\n                borderRight={columnIdx < 2}\n                borderLeft={columnIdx > 0}\n                borderBottom={rowIdx < 2}\n                borderTop={rowIdx > 0}\n                onClick={() =>\n                  updateGameMatrix(columnIdx, rowIdx, playerSymbol)\n                }\n              >\n                {column && column !== \"null\" ? (\n                  column === \"x\" ? (\n                    <X />\n                  ) : (\n                    <O />\n                  )\n                ) : null}\n              </Cell>\n            ))}\n          </RowContainer>\n        );\n      })}\n    </GameContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}